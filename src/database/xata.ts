// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Students",
    columns: [
      { name: "subjects", type: "json" },
      { name: "email", type: "text" },
      { name: "password", type: "text" },
      { name: "strand", type: "text" },
      { name: "first_name", type: "text" },
      { name: "last_name", type: "text" },
      { name: "middle_name", type: "text" },
      { name: "section", type: "text" },
      { name: "year", type: "text" },
    ],
  },
  {
    name: "instructors",
    columns: [
      { name: "password", type: "text" },
      { name: "first_name", type: "text" },
      { name: "middle_name", type: "text" },
      { name: "last_name", type: "text" },
      { name: "subjects", type: "multiple" },
    ],
  },
  {
    name: "root",
    columns: [
      {
        name: "password",
        type: "text",
        notNull: true,
        defaultValue: "rootadmin",
      },
    ],
  },
  { name: "subjects", columns: [] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Students = InferredTypes["Students"];
export type StudentsRecord = Students & XataRecord;

export type Instructors = InferredTypes["instructors"];
export type InstructorsRecord = Instructors & XataRecord;

export type Root = InferredTypes["root"];
export type RootRecord = Root & XataRecord;

export type Subjects = InferredTypes["subjects"];
export type SubjectsRecord = Subjects & XataRecord;

export type DatabaseSchema = {
  Students: StudentsRecord;
  instructors: InstructorsRecord;
  root: RootRecord;
  subjects: SubjectsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Kim-Eduard-Saludes-s-workspace-egeos8.ap-southeast-2.xata.sh/db/BALSE",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
