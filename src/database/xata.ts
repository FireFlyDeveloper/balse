// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Students",
    columns: [
      { name: "first_name", type: "text" },
      { name: "last_name", type: "text" },
      { name: "middle_name", type: "text" },
      { name: "email", type: "text" },
      { name: "password_hash", type: "text" },
      { name: "date_of_birth", type: "text" },
      { name: "enrollment_date", type: "text" },
      { name: "class_id", type: "link", link: { table: "Classes" } },
    ],
    revLinks: [
      { column: "student_id", table: "Enrollments" },
      { column: "student_id", table: "Grades" },
    ],
  },
  {
    name: "Teachers",
    columns: [
      { name: "first_name", type: "text" },
      { name: "last_name", type: "text" },
      { name: "middle_name", type: "text" },
      { name: "email", type: "text" },
      { name: "password_hash", type: "text" },
      { name: "department_id", type: "link", link: { table: "Departments" } },
    ],
    revLinks: [{ column: "teacher_id", table: "Courses" }],
  },
  {
    name: "Admins",
    columns: [
      { name: "first_name", type: "text" },
      { name: "last_name", type: "text" },
      { name: "middle_name", type: "text" },
      { name: "email", type: "text" },
      { name: "password_hash", type: "text" },
    ],
  },
  {
    name: "Departments",
    columns: [{ name: "department_name", type: "text" }],
    revLinks: [
      { column: "department_id", table: "Classes" },
      { column: "department_id", table: "Courses" },
      { column: "department_id", table: "Teachers" },
    ],
  },
  {
    name: "Classes",
    columns: [
      { name: "class_name", type: "text" },
      { name: "department_id", type: "link", link: { table: "Departments" } },
    ],
    revLinks: [{ column: "class_id", table: "Students" }],
  },
  {
    name: "Courses",
    columns: [
      { name: "course_name", type: "text" },
      { name: "department_id", type: "link", link: { table: "Departments" } },
      { name: "teacher_id", type: "link", link: { table: "Teachers" } },
    ],
    revLinks: [
      { column: "course_id", table: "Enrollments" },
      { column: "course_id", table: "Grades" },
    ],
  },
  {
    name: "Enrollments",
    columns: [
      { name: "student_id", type: "link", link: { table: "Students" } },
      { name: "course_id", type: "link", link: { table: "Courses" } },
      { name: "enrollment_date", type: "text" },
    ],
  },
  {
    name: "Grades",
    columns: [
      { name: "student_id", type: "link", link: { table: "Students" } },
      { name: "course_id", type: "link", link: { table: "Courses" } },
      { name: "grade", type: "text" },
      { name: "grading_period", type: "text" },
      { name: "date_recorded", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Students = InferredTypes["Students"];
export type StudentsRecord = Students & XataRecord;

export type Teachers = InferredTypes["Teachers"];
export type TeachersRecord = Teachers & XataRecord;

export type Admins = InferredTypes["Admins"];
export type AdminsRecord = Admins & XataRecord;

export type Departments = InferredTypes["Departments"];
export type DepartmentsRecord = Departments & XataRecord;

export type Classes = InferredTypes["Classes"];
export type ClassesRecord = Classes & XataRecord;

export type Courses = InferredTypes["Courses"];
export type CoursesRecord = Courses & XataRecord;

export type Enrollments = InferredTypes["Enrollments"];
export type EnrollmentsRecord = Enrollments & XataRecord;

export type Grades = InferredTypes["Grades"];
export type GradesRecord = Grades & XataRecord;

export type DatabaseSchema = {
  Students: StudentsRecord;
  Teachers: TeachersRecord;
  Admins: AdminsRecord;
  Departments: DepartmentsRecord;
  Classes: ClassesRecord;
  Courses: CoursesRecord;
  Enrollments: EnrollmentsRecord;
  Grades: GradesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Kim-Eduard-Saludes-s-workspace-egeos8.ap-southeast-2.xata.sh/db/BALSE",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
